/*
 * Copyright 2024 AboveCloud9.AI Products and Services Private Limited
 * All rights reserved.
 * This code may not be used, copied, modified, or distributed without explicit permission.
 */

// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_labeler is a generated GoMock package.
package mock_labeler

import (
	reflect "reflect"
	entity "sudhagar/glad/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// RemoveLabel mocks base method.
func (m *MockUseCase) RemoveLabel(tenantID, contactID, labelID entity.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveLabel", tenantID, contactID, labelID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveLabel indicates an expected call of RemoveLabel.
func (mr *MockUseCaseMockRecorder) RemoveLabel(tenantID, contactID, labelID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveLabel", reflect.TypeOf((*MockUseCase)(nil).RemoveLabel), tenantID, contactID, labelID)
}

// SetLabel mocks base method.
func (m *MockUseCase) SetLabel(tenantID, contactID, labelID entity.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLabel", tenantID, contactID, labelID)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLabel indicates an expected call of SetLabel.
func (mr *MockUseCaseMockRecorder) SetLabel(tenantID, contactID, labelID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLabel", reflect.TypeOf((*MockUseCase)(nil).SetLabel), tenantID, contactID, labelID)
}
